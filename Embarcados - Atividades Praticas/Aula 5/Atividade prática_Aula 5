Universidade de Brasília
Aluno: Douglas da Silveira Alves		Matrícula: 13/0024881
data: 22/03/17


			Atividade Prática - Aula 5

1. Crie um código em C para escrever "Ola mundo!" em um arquivo chamado 'ola_mundo.txt'.

-->Código

#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>

int main()
{
	int fp, i;
	char string[100]="Ola mundo !";

	fp = open ("ola_mundo.txt", O_WRONLY | O_CREAT, S_IRWXU);
	if(fp==-1)
	{
		printf ("Erro na abertura do arquivo.\n");
		exit (1);
	}
	
	for(i=0; string[i]; i++)
		write(fp, &(string[i]), 1);
	write(fp, "\n", 1);
	close(fp);

	return 0;
}

-->Comando
gcc q1.c -o hello
./hello
cat ola_mundo.txt



2. Crie um código em C que pergunta ao usuário seu nome e sua idade, e escreve este conteúdo em um arquivo com o seu nome e extensão '.txt'. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_1':
	$ ./ola_usuario_1
	$ Digite o seu nome: Eu
	$ Digite a sua idade: 30
	$ cat Eu.txt
	$ Nome: Eu
	$ Idade: 30 anos
	$

-->Código

#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

int main()
{
	int fp, i;
	char string[100];
	char id[4];
	char nome[]="Nome: ";
	char idade[]="Idade: ";

	fp = open ("eu.txt", O_WRONLY | O_CREAT, S_IRWXU);
	if(fp==-1)
	{
		printf ("Erro na abertura do arquivo.\n");
		exit (1);
	}

	strcat(nome, string);
	
	
	printf("Digite seu nome:\n");
	scanf("%s", string);

	printf("Digite sua idade:\n");
	scanf("%s", id);

		
	strcat (nome, string); 
	strcat (idade, id);
	strcat (idade, " anos.\n");

	for(i=0; nome[i]; i++)
		write(fp, &(nome[i]), 1); 	
		write(fp, "\n", 1);

	
	for(i=0; idade[i]; i++)
		write(fp, &(idade[i]), 1); 	
		write(fp, "\n", 1);
	
	close(fp);

	return 0;
}

-->Comandos
gcc q2.c -o ola_usuario_1
./ola_usuario_1
.
.
.
cat eu.txt 


3. Crie um código em C que recebe o nome do usuário e e sua idade como argumentos de entrada (usando as variáveis argc e *argv[]), e escreve este conteúdo em um arquivo com o seu nome e extensão '.txt'. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_2':
	$ ./ola_usuario_2 Eu 30
	$ cat Eu.txt
	$ Nome: Eu
	$ Idade: 30 anos
	$

-->Código

#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

int main(int argc, char *argv[])
{
	int fp, i;
	int t=1;
	char string[100];
	char id[4];
	char nome[]="Nome: ";
	char idade[]="Idade: ";

	fp = open ("eu2.txt", O_WRONLY | O_CREAT, S_IRWXU);
	if(fp==-1)
	{
		printf ("Erro na abertura do arquivo.\n");
		exit (1);
	}
	
	

	for(i=1; i<(argc-1) ;i++){
	
		strcat(string, argv[i]);
		strcat(string, " ");	
	}
	

	strcat (nome, string); 
	strcat (idade, argv[argc-1]);
	strcat (idade, " anos.\n");

	for(i=0; nome[i]; i++)
		write(fp, &(nome[i]), 1); 	
		write(fp, "\n", 1);

	
	for(i=0; idade[i]; i++)
		write(fp, &(idade[i]), 1); 	
		write(fp, "\n", 1);
	
	close(fp);

	return 0;
}

-->Comando
gcc q3.c -o ola_usuario_2
./ola_usuario_2 Douglas 21
cat eu2.txt



4. Crie uma função que retorna o tamanho de um arquivo, usando o seguinte protótipo:

int tam_arq_texto(char *nome_arquivo);

--Codigo Principal (bib_arqs.c):

#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/stat.h>
#include "bib_arqs.h"

struct stat st;

int tam_arq_text(char *nome_arquivo)
{
	int fp, i;
	char string[100];

	fp = open ("nome_arquivo", O_RDONLY | O_CREAT, S_IRWXU);
	if(fp==-1)
	{
		printf ("Erro na abertura do arquivo.\n");
		exit (1);
	}
	
	stat(nome_arquivo, &st);

	int size= st.st_size;
	
	printf("O arquivo %s possui %d bytes.\n", nome_arquivo, size);

	return size;
}

--Arquivo.H (bib_arqs.h)

	int tam_arq_text(char *nome_arquivo);


-->Código secundário

include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include "bib_arqs.h"

int main(int argc, char *argv[])
{

	tam_arq_text(argv[1]);	

	return 0;
}



5. Crie uma função que lê o conteúdo de um arquivo-texto e o guarda em uma string, usando o seguinte protótipo:

	void le_arq_texto(char *nome_arquivo, char *conteúdo);


--> Código (função le_arq_texto)

#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <string.h>
#include "bib_arqs.h"

void le_arq_texto (char *nome_arquivo, char *conteudo){
	
	int fp;
	int i;
	char p;
	
	fp = open ("nome_arquivo", O_RDONLY | O_CREAT, S_IRWXU);
	if(fp==-1)
	{
		printf ("Erro na abertura do arquivo.\n");
		exit (1);
	}

	

	while( read(fp, &p,1) != 0)
	{		
		conteudo[i]= p;
		printf("%c", conteudo[i]);

	}

	close(fp);
}


--> Código do arquivo .h(bib_arqs.h)

void le_arq_texto (char *nome_arquivo, char *conteudo);


--> Código para chamar a função:

#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include "bib_arqs.h"

int main(int argc, char *argv[])
{

	le_arq_texto(argv[1], argv[2]);	

	return 0;
}


6. Crie um código em C que copia a funcionalidade básica do comando 'cat': escrever o conteúdo de um arquivo-texto no terminal. Reaproveite as funções já criadas nas questões anteriores. Por exemplo, considerando que o código criado recebeu o nome de 'cat_falsificado':
	$ echo Ola mundo cruel! Ola universo ingrato! > ola.txt
	$ ./cat_falsificado ola.txt
	$ Ola mundo cruel! Ola universo ingrato!
	$


--> Código 

#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

int main(int argc, const char * argv[])
{
	int fp, i;
	char string[100];
	char c;
		
	for(i=1; i<=(argc-1) ;i++){
	
		strcat(string, argv[i]);	
	}
	

	fp = open ("ola_mundo.txt", O_RDONLY | O_CREAT, S_IRWXU);
	if(fp==-1)
	{
		printf ("Erro na abertura do arquivo.\n");
		exit (1);
	}

	
	while (read (fp, &c, 1) != 0)
		printf("%c", c);	
	
	close(fp);

	return 0;
}




7. Crie um código em C que conta a ocorrência de uma palavra-chave em um arquivo-texto, e escreve o resultado no terminal. Reaproveite as funções já criadas nas questões anteriores. Por exemplo, considerando que o código criado recebeu o nome de 'busca_e_conta':
	$ echo Ola mundo cruel! Ola universo ingrato! > ola.txt
	$ ./busca_e_conta Ola ola.txt
	$ 'Ola' ocorre 2 vezes no arquivo 'ola.txt'.
	$



--Código:

#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include "bib_arqs.h"

enum boolean {
	true=1,
	false=0
};

typedef enum boolean bool;

void tam_arq_texto (char *nome_arquivo, char *palavra){
	
	int fp;	
	char p;
	char string[100];
	int i=0;
	int cont=0;	
	bool flag;

	strcat(palavra, "\0");

	fp = open (nome_arquivo , O_RDONLY | O_CREAT, S_IRWXU);
	if(fp==-1)
	{
		printf ("Erro na abertura do arquivo.\n");
		exit (1);
	}


	else{ 
		while( read(fp, &p, 1) != 0)
		{
			flag= false;

			for (i= 0; (strlen(palavra)); i++){

			string[i]=p;

			if(p != palavra[i]){
			flag = true;
			break;
			}

			if (flag ==false)
			cont+=1;

		}
	     }

		

	printf("O arquivo possui a palavra %s : %d vezes\n", palavra, cont);
	close(fp);

}
}


-->Código .h

void tam_arq_texto (char *nome_arquivo, char *palavra);

--> Código secundário


#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include "bib_arqs.h"

int main(int argc, char *argv[])
{

	tam_arq_texto(argv[1], argv[2]);	

	return 0;
}
